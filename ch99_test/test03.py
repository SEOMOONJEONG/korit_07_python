'''
3. collection 관련 문제
        - collection 자체 문제
'''

'''
예상문제
'''
data_list = [10, 20, 30, 'A', 'B']

# 리스트를 튜플로 변환
data_tuple = tuple(data_list)

# 튜플을 다시 리스트로 변환
data_list_again = list(data_tuple)

print(f"원본 리스트: {data_list}")
print(f"튜플로 변환: {data_tuple}")
print(f"다시 리스트로 변환: {data_list_again}")

'''
해설
이 문제는 파이썬의 **리스트(list)**와 튜플(tuple) 간의 자료형 변환을 이해하는지 확인하는 문제입니다.
파이썬에는 list()와 tuple()과 같은 내장 함수를 사용하여 자료형을 쉽게 변환할 수 있습니다. 🪄


data_tuple = tuple(data_list): tuple() 함수는 매개변수로 전달된 리스트 data_list의 요소들을 사용하여 새로운 튜플 data_tuple을 만듭니다.


data_list_again = list(data_tuple): list() 함수는 마찬가지로 튜플 data_tuple의 요소들을 사용하여 새로운 리스트 data_list_again를 생성합니다.


이러한 변환은 데이터의 불변성과 가변성을 다룰 때 유용하게 쓰일 수 있습니다. 리스트는 요소를 추가, 수정, 삭제할 수 있지만(가변적) , 튜플은 한 번 생성되면 변경할 수 없습니다(불변적).
'''


'''
문제 2
문제: 리스트의 요소 순서 뒤집기
주어진 리스트 my_list의 순서를 뒤집고, 뒤집힌 리스트를 출력하는 프로그램을 작성하세요. 단, 새로운 리스트를 생성하지 않고, 기존 리스트의 순서를 그대로 변경해야 합니다.

입력:
my_list = [10, 20, 30, 40, 50]

실행 예:

원본 리스트: [10, 20, 30, 40, 50]
뒤집힌 리스트: [50, 40, 30, 20, 10]
'''
my_list = [10, 20, 30, 40, 50]

print(f"원본 리스트: {my_list}")

# 리스트 순서를 제자리에서 뒤집기
my_list.reverse()

print(f"뒤집힌 리스트: {my_list}")

'''
해설:
이 문제는 리스트의 reverse() 메서드의 기능을 이해하고 있는지 묻습니다. reverse()는 새로운 리스트를 반환하지 않고, 호출한 리스트 자체의 순서를 뒤집습니다. 이는 리스트가 변경 가능한(mutable) 자료형이기 때문에 가능합니다.

my_list.reverse(): 이 메서드를 사용하면 my_list의 요소들이 역순으로 재배치됩니다.

만약 새로운 리스트를 생성하고 싶다면, 슬라이싱을 이용한 my_list[::-1] 방식이나 reversed() 함수를 사용해 풀 수 있습니다. 하지만 이 문제에서는 원본 리스트를 직접 변경하라는 조건에 맞춰 reverse() 메서드를 사용하는 것이 가장 적절합니다.
'''